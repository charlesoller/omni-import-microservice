// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: languages.sql

package db

import (
	"context"
)

const upsertLanguage = `-- name: UpsertLanguage :one
INSERT INTO languages (
  english_name, iso_639_1, name
) VALUES (
  $1, $2, $3
)
ON CONFLICT (iso_639_1) DO UPDATE SET
  english_name = EXCLUDED.english_name,
  name = EXCLUDED.name
RETURNING english_name, iso_639_1, name
`

type UpsertLanguageParams struct {
	EnglishName string `json:"english_name"`
	Iso6391     string `json:"iso_639_1"`
	Name        string `json:"name"`
}

func (q *Queries) UpsertLanguage(ctx context.Context, arg UpsertLanguageParams) (Language, error) {
	row := q.queryRow(ctx, q.upsertLanguageStmt, upsertLanguage, arg.EnglishName, arg.Iso6391, arg.Name)
	var i Language
	err := row.Scan(&i.EnglishName, &i.Iso6391, &i.Name)
	return i, err
}
